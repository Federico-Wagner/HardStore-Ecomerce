productCreator.js
//en la vista
        <div class="add-product">
            <div class="add-product-table">
                <% showRandom.forEach(function(product){%>
                <div class="add-item">
                    <div class="add-img">
                        <img src=/images/products/<%= product['images.image_name']%>alt="<%=product.product_name%>"
                            class="product-add-image">
                    </div>
                    <div>
                        <ul class="details">
                            <li>
                                <p><%= product.product_name %></p>
                            </li>
                            <li>
                                <p class="price"><%= product.prince %></p>
                            </li>
                            <li><button class="btn btn-primary btn-addCart">Agregar a carrito</button></li>
                        </ul>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>

// el controlador  

 // let random = function(productos){
        //     let resultado = [];
        //         for(let i = 1; i <= 3; i++ ){
        //         let aleatorio = productos[Math.floor(Math.random() * productos.length)]
        //         resultado.push(aleatorio)
        //     }
        //     return resultado
        //     }
        // let showRandom = random(data_base);
        // refreshContent()
        // let producto = data_base.find(function(producto){
        //     return  producto.prod_id == req.params.id
        // })
        // res.render('detail', {'producto': producto,  showRandom: showRandom});
        //data base


//problemas con categori 
 <!-- <% for (category of allCategories){ %>
                            <option value="<%= category.id %>"
                                <%= oneProduct.category_id === category.id ? 'selected' : null %>>
                                <%= category.category_name %>
                            </option> 
                            <% } %> -->


   //front-end
      form.addEventListener('submit', e => {
        const errores = [];
         

        if(name.value === ''){
            setError(name, 'Ingrese un nombre de producto')
            errores.push('error')
        }
        else if(name.value.length < 5){
            setError(name, 'El nombre debe tener al menos 5 caracteres')
            errores.push('error')
        }
        else{
            setSuccess(name)
        }

        if(categori.value === ''){
            setError(categori, 'Seleccione una categoria')
            errores.push('error')
        }else{
            setSuccess(categori)
        }
        
        if(brand.value === ''){
            setError(brand, 'Ingrese una marca')
            errores.push('error')
        }else{
            setSuccess(brand)
        }

        if(model.value === ''){
            setError(model, 'Ingrese un modelo')
            errores.push('error')
        }else{
            setSuccess(model)
        }

        if(color.value === ''){
            setError(color, 'Ingrese un color')
            errores.push('error')
        }else{
            setSuccess(color)
        }

        if(price.value === ''){
            setError(price, 'Ingrese un precio')
            errores.push('error')
        }else{
            setSuccess(price)
        }

        if(dto.value === ''){
            setError(desc, 'Ingrese un valor')
            errores.push('error')
        }else{
            setSuccess(dto)
        }

        if(stock.value === ''){
            setError(stock, 'Ingrese el stock')
            errores.push('error')
        }else{
            setSuccess(stock)
        }

        if(descrip.value === ''){
            setError(descrip, 'Ingrese una descripción')
            errores.push('error')
        } 
        else if(descrip.value.length < 20){
            setError(descrip, 'La decripción debe tener al menos 20 carácteres')
            errores.push('error')
        }
        else{
            setSuccess(descrip)
        }

        if(file.value === ''){
            setError(file, 'Ingrese una imagen')
            errores.push('error')
        }
        else if(file.value != ""){
            const whitelist = ['png', 'jpeg', 'jpg', 'webp']   
            if (!whitelist.includes(file.value.split(".")[1])){
                setError(file, 'La imagen debe ser formato: \n .png , jpeg , jpg o webp')
                errores.push('error')
            }
            else{
                setSuccess(file)
            }
        }

        if (errores.length > 0) {
            e.preventDefault();
        }else{
            form.submit();
        }

    
    })                         